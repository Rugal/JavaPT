package ga.rugal.jpt.common.tracker.common;

import ga.rugal.jpt.common.tracker.common.protocol.RequestEvent;
import ga.rugal.jpt.common.tracker.server.TrackedPeer;
import ga.rugal.jpt.core.entity.Client;
import ga.rugal.jpt.core.entity.Post;
import ga.rugal.jpt.core.entity.User;
import java.nio.ByteBuffer;
import lombok.Data;

/**
 *
 * @author Rugal Bernstein
 */
@Data
public class TrackerUpdateBean
{

    //Fields below are primitive data
    private TrackedPeer.PeerState state;

    private RequestEvent event;

    private String infoHash;

    //short name of client software
    private String cname;

    private String corrupt;

    //version of client software
    private String version;

    //random number generated by client software
    private String random;

    private int port;

    private long downloaded = 0;

    private long uploaded = 0;

    private long left = 0;

    private int compact = 1;

    private String key;

    private int no_peer_id;

    private String ip;

    private int numwant = 50;

    private String trackerid;

    // Fields below are got from DB by primitive data
    //Only accessible after correctly and completely generated
    private User user;

    private Client client;

    private Post post;

    public ByteBuffer getBufferPeerID()
    {
        return ByteBuffer.wrap(getPeerID().getBytes());
    }

    public String getPeerID()
    {
        return this.getCname() + this.getVersion() + this.getRandom();
    }
}
